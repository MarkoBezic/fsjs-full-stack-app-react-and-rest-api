{"version":3,"sources":["config.js","Data.js","Context.js","components/Header.js","components/Courses.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/CourseDetail.js","components/UserSignIn.js","components/UserSignOut.js","components/UserSignUp.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["config","apiBaseUrl","Data","path","method","body","requiresAuth","credentials","url","options","headers","JSON","stringify","encodedCredentials","btoa","emailAddress","password","fetch","a","this","api","response","status","json","then","data","Error","user","errors","id","course","courseId","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","signIn","getUser","setState","set","expires","signOut","remove","value","actions","props","children","Component","Consumer","withContext","context","Header","authUser","className","to","firstName","lastName","Courses","useState","isLoaded","setIsLoaded","courses","setCourses","useEffect","getCourses","result","message","history","push","map","pathname","title","version","xmlns","x","y","viewBox","points","Form","cancel","submit","submitButtonText","elements","ErrorsDisplay","erros","errorsDisplay","length","error","i","onSubmit","event","preventDefault","type","onClick","CreateCourse","setErrors","courseTitle","setcourseTitle","courseDescription","setCourseDescription","estimatedTime","setEstimatedTime","materialsNeeded","setMaterialsNeeded","change","e","name","target","description","userId","createCourse","console","log","catch","err","htmlFor","onChange","UpdateCourse","setCourse","setCourseTitle","getCourseIdFromBrowser","useCallback","location","substring","getRequestedCourse","getCourse","courseUpdated","updateCourse","User","CourseDetail","setError","getCourseIdFromBrowserAddressBar","split","splice","join","idFromBrowserAddressBar","deleteCourse","UserSignIn","setEmailAddress","setPassword","from","UserSignOut","UserSignUp","setFirstName","setLastName","confirmedPassword","setCofirmedPassword","signInUser","createUser","NotFound","Forbidden","UnhandledError","PrivateRoute","component","rest","render","CoursesWithContext","HeaderWithContext","CourseDetailWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","CreateCourseWithContext","UpdateCourseWithContext","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"kOAIeA,EAJA,CACbC,WAAY,6BCCOC,E,mFACnB,SACEC,GAKC,IAJDC,EAIA,uDAJS,MACTC,EAGA,uDAHO,KACPC,EAEA,wDADAC,EACA,uDADc,KAERC,EAAMR,EAAOC,WAAaE,EAE1BM,EAAU,CACdL,SACAM,QAAS,CACP,eAAgB,oCAQpB,GAJa,OAATL,IACFI,EAAQJ,KAAOM,KAAKC,UAAUP,IAG5BC,EAAc,CAChB,IAAMO,EAAqBC,KAAK,GAAD,OAC1BP,EAAYQ,aADc,YACER,EAAYS,WAG7CP,EAAQC,QAAR,8BAA4CG,GAE9C,OAAOI,MAAMT,EAAKC,K,4DAIpB,WAAcM,EAAcC,GAA5B,eAAAE,EAAA,sEACyBC,KAAKC,IAAI,SAAU,MAAO,MAAM,EAAM,CAC3DL,eACAC,aAHJ,UAK0B,OAJlBK,EADR,QAKeC,OALf,yCAMWD,EAASE,OAAOC,MAAK,SAACC,GAAD,OAAUA,MAN1C,UAOiC,MAApBJ,EAASC,OAPtB,0CAQW,MARX,cAUU,IAAII,MAVd,iD,wHAeA,WAAiBC,GAAjB,eAAAT,EAAA,sEACyBC,KAAKC,IAAI,SAAU,OAAQO,GADpD,UAE0B,OADlBN,EADR,QAEeC,OAFf,yCAGW,IAHX,UAIiC,MAApBD,EAASC,OAJtB,0CAKWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,EAAKG,WANlB,cASU,IAAIF,MATd,iD,sHAcA,4BAAAR,EAAA,sEACyBC,KAAKC,IAAI,WAAY,OAD9C,UAE0B,OADlBC,EADR,QAEeC,OAFf,yCAGWD,EAASE,OAAOC,MAAK,SAACC,GAAD,OAAUA,MAH1C,UAIiC,MAApBJ,EAASC,OAJtB,0CAKWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,MANb,cASU,IAAIC,MATd,iD,oHAcA,WAAgBG,GAAhB,eAAAX,EAAA,sEACyBC,KAAKC,IAAL,mBAAqBS,GAAM,OADpD,UAE0B,OADlBR,EADR,QAEeC,OAFf,yCAGWD,EAASE,OAAOC,MAAK,SAACC,GAAD,OAAUA,MAH1C,UAIiC,MAApBJ,EAASC,OAJtB,0CAKWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,MANb,cASU,IAAIC,MATd,iD,wHAcA,WAAmBI,EAAQf,EAAcC,GAAzC,eAAAE,EAAA,sEACyBC,KAAKC,IAAI,WAAY,OAAQU,GAAQ,EAAM,CAChEf,eACAC,aAHJ,UAK0B,OAJlBK,EADR,QAKeC,OALf,yCAMW,IANX,UAOiC,MAApBD,EAASC,OAPtB,0CAQWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,EAAKG,WATlB,cAYU,IAAIF,MAZd,iD,4HAiBA,WAAmBI,EAAQf,EAAcC,GAAzC,eAAAE,EAAA,sEACyBC,KAAKC,IAAL,mBACTU,EAAOD,IACnB,MACAC,GACA,EACA,CACEf,eACAC,aARN,UAW0B,OAVlBK,EADR,QAWeC,OAXf,yCAYW,IAZX,UAaiC,MAApBD,EAASC,OAbtB,0CAcWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,EAAKG,WAflB,cAkBU,IAAIF,MAlBd,iD,4HAuBA,WAAmBK,EAAUhB,EAAcC,GAA3C,eAAAE,EAAA,sEACyBC,KAAKC,IAAL,mBACTW,GACZ,SACA,MACA,EACA,CACEhB,eACAC,aARN,UAW0B,OAVlBK,EADR,QAWeC,OAXf,yCAYW,IAZX,UAaiC,MAApBD,EAASC,OAbtB,0CAcWD,EAASE,OAAOC,MAAK,SAACC,GAC3B,OAAOA,EAAKG,WAflB,cAkBU,IAAIF,MAlBd,iD,0FC/HIM,EAAUC,IAAMC,gBAETC,EAAb,kDACE,aAAe,IAAD,8BACZ,gBAIFC,MAAQ,CACNC,kBAAmBC,IAAQC,QAAQ,sBAAwB,KAC3DvB,SAAUsB,IAAQC,QAAQ,aAAe,KACzCT,OAAQ,IARI,EA4BdU,OA5Bc,uCA4BL,WAAOzB,EAAcC,GAArB,eAAAE,EAAA,sEACY,EAAKO,KAAKgB,QAAQ1B,EAAcC,GAD5C,cAEM,QADPW,EADC,UAGL,EAAKe,SAAS,CACZL,kBAAmBV,EACnBX,SAAUA,IAGZsB,IAAQK,IAAI,oBAAqBhC,KAAKC,UAAUe,GAAO,CAAEiB,QAAS,IAClEN,IAAQK,IAAI,WAAY3B,EAAU,CAAE4B,QAAS,KATxC,kBAWAjB,GAXA,2CA5BK,0DA0CdkB,QA1Cc,sBA0CJ,sBAAA3B,EAAA,sDACR,EAAKwB,SAAS,CAAEL,kBAAmB,KAAMrB,SAAU,OACnDsB,IAAQQ,OAAO,oBAAqB,YAF5B,2CAxCR,EAAKrB,KAAO,IAAIvB,EAFJ,EADhB,0CAYE,WACE,MAAwCiB,KAAKiB,MAArCC,EAAR,EAAQA,kBAEFU,EAAQ,CACZ/B,SAHF,EAA2BA,SAIzBqB,oBACAZ,KAAMN,KAAKM,KACXuB,QAAS,CACPR,OAAQrB,KAAKqB,OACbK,QAAS1B,KAAK0B,UAGlB,OACE,cAACb,EAAQG,SAAT,CAAkBY,MAAOA,EAAzB,SAAiC5B,KAAK8B,MAAMC,eAzBlD,GAA8BC,aAiDjBC,EAAWpB,EAAQoB,SAEjB,SAASC,EAAYF,GAClC,OAAO,SAA0BF,GAC/B,OACE,cAACjB,EAAQoB,SAAT,UACG,SAACE,GAAD,OAAa,cAACH,EAAD,2BAAeF,GAAf,IAAsBK,QAASA,S,iBCtBtCC,EApCA,SAACN,GACd,IACMO,EADcP,EAAZK,QACiBjB,kBAEzB,OACE,iCACE,sBAAKoB,UAAU,oBAAf,UACE,oBAAIA,UAAU,eAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,uBAEF,8BACGF,EACC,qCACE,6CACYA,EAASG,UADrB,IACiCH,EAASI,SAAW,OAErD,cAAC,IAAD,CAAMF,GAAG,WAAT,yBAGF,mCACE,qBAAID,UAAU,oBAAd,UACE,6BACE,cAAC,IAAD,CAAMC,GAAG,UAAT,uBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,oC,OCwCHG,EAjEC,SAACZ,GACf,IAAQK,EAAYL,EAAZK,QAER,EAAgCQ,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,qBAAU,WAERb,EAAQ7B,KAAK2C,aAAa5C,MAAK,SAAC6C,GAER,KAAlBA,EAAOC,QACTrB,EAAMsB,QAAQC,KAAK,WAEnBR,GAAY,GACZE,EAAWG,SAGd,CAACf,EAAQ7B,KAAMwB,EAAMsB,UAEnBR,EAID,mCACE,sBAAKN,UAAU,kBAAf,UACGQ,EACGA,EAAQQ,KAAI,SAAC3C,GAAD,OACV,eAAC,IAAD,CACE2B,UAAU,8BACVC,GAAI,CACFgB,SAAS,YAAD,OAAc5C,EAAOD,IAC7BO,MAAO,CAAEL,SAAS,GAAD,OAAKD,EAAOD,MAJjC,UAQE,oBAAI4B,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,SAA+B3B,EAAO6C,UAHjC7C,EAAOD,OAMhB,IAEJ,cAAC,IAAD,CACE4B,UAAU,qCACVC,GAAG,kBAFL,SAIE,uBAAMD,UAAU,qBAAhB,UACE,qBACEmB,QAAQ,MACRC,MAAM,6BACNC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRvB,UAAU,MANZ,SAQE,yBAASwB,OAAO,2DATpB,uBAzBD,8C,OC8BIC,EAnDF,SAACjC,GACZ,IAAQkC,EAAuDlC,EAAvDkC,OAAQvD,EAA+CqB,EAA/CrB,OAAQwD,EAAuCnC,EAAvCmC,OAAQC,EAA+BpC,EAA/BoC,iBAAkBC,EAAarC,EAAbqC,SAYlD,SAASC,EAAT,GAAkC,EAATC,MAAU,IAC7BC,EAAgB,KAgBpB,OAdI7D,EAAO8D,SACTD,EACE,sBAAKhC,UAAU,qBAAf,UACE,mDACA,8BACE,6BACG7B,EAAO6C,KAAI,SAACkB,EAAOC,GAAR,OACV,6BAAaD,GAAJC,cAOdH,EAGT,OACE,gCACE,cAACF,EAAD,CAAe3D,OAAQA,IACvB,uBAAMiE,SAjCV,SAAsBC,GACpBA,EAAMC,iBACNX,KA+BE,UACGE,IACD,sBAAK7B,UAAU,aAAf,UACE,wBAAQA,UAAU,SAASuC,KAAK,SAAhC,SACGX,IAEH,wBAAQ5B,UAAU,0BAA0BwC,QAlCpD,SAAsBH,GACpBA,EAAMC,iBACNZ,KAgCM,8BC4EKe,EArHM,SAACjD,GACpB,MAA4Ba,mBAAS,IAArC,mBAAOlC,EAAP,KAAeuE,EAAf,KACA,EAAsCrC,mBAAS,IAA/C,mBAAOsC,EAAP,KAAoBC,EAApB,KACA,EAAkDvC,mBAAS,IAA3D,mBAAOwC,EAAP,KAA0BC,EAA1B,KACA,EAA0CzC,mBAAS,IAAnD,mBAAO0C,EAAP,KAAsBC,EAAtB,KACA,EAA8C3C,mBAAS,IAAvD,mBAAO4C,EAAP,KAAwBC,EAAxB,KAsCMC,EAAS,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChB/D,EAAQ8D,EAAEE,OAAOhE,MAEV,gBAAT+D,EACFT,EAAetD,GACG,sBAAT+D,EACTP,EAAqBxD,GACH,kBAAT+D,EACTL,EAAiB1D,GACC,oBAAT+D,GACTH,EAAmB5D,IAIvB,OACE,8BACE,sBAAKU,UAAU,OAAf,UACE,+CACA,cAAC,EAAD,CACE0B,OAxDO,WACblC,EAAMsB,QAAQC,KAAK,MAwDb5C,OAAQA,EACRwD,OAtDmB,WACzB,IAAQ9B,EAAYL,EAAZK,QACFE,EAAWF,EAAQjB,kBACjBtB,EAAqByC,EAArBzC,aAAcc,EAAO2B,EAAP3B,GACdb,EAAasC,EAAbtC,SAGFc,EAAS,CACb6C,MAAOyB,EACPY,YAAaV,EACbE,gBACAE,kBACAO,OAAQpF,GAIVyB,EAAQ7B,KACLyF,aAAapF,EAAQf,EAAcC,GACnCQ,MAAK,SAACI,GACDA,EAAO8D,OACTS,EAAUvE,IAEVuF,QAAQC,IAAR,UAAetF,EAAO6C,MAAtB,oCACA1B,EAAMsB,QAAQC,KAAK,SAGtB6C,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZrE,EAAMsB,QAAQC,KAAK,cA2BjBa,iBAAiB,gBACjBC,SAAU,kBACR,mCACE,sBAAK7B,UAAU,aAAf,UACE,gCACE,uBAAO8D,QAAQ,cAAf,0BACA,uBACE1F,GAAG,cACHiF,KAAK,cACLd,KAAK,OACLjD,MAAOqD,EACPoB,SAAUZ,IAGZ,6CAEA,uBAAOW,QAAQ,oBAAf,gCACA,0BACE1F,GAAG,oBACHiF,KAAK,oBACL/D,MAAOuD,EACPkB,SAAUZ,OAGd,gCACE,uBAAOW,QAAQ,gBAAf,4BACA,uBACE1F,GAAG,gBACHiF,KAAK,gBACLd,KAAK,OACLjD,MAAOyD,EACPgB,SAAUZ,IAGZ,uBAAOW,QAAQ,kBAAf,8BACA,0BACE1F,GAAG,kBACHiF,KAAK,kBACL/D,MAAO2D,EACPc,SAAUZ,qBCuDfa,EAhKM,SAACxE,GACpB,IAAQK,EAAYL,EAAZK,QACFE,EAAWF,EAAQjB,kBAEzB,EAA4ByB,mBAAS,IAArC,mBAAOhC,EAAP,KAAe4F,EAAf,KACA,EAA4B5D,mBAAS,IAArC,mBAAOlC,EAAP,KAAeuE,EAAf,KACA,EAAsCrC,mBAAS,IAA/C,mBAAOsC,EAAP,KAAoBuB,EAApB,KACA,EAAkD7D,mBAAS,IAA3D,mBAAOwC,EAAP,KAA0BC,EAA1B,KACA,EAA0CzC,mBAAS,IAAnD,mBAAO0C,EAAP,KAAsBC,EAAtB,KACA,EAA8C3C,mBAAS,IAAvD,mBAAO4C,EAAP,KAAwBC,EAAxB,KAGMiB,EAAyBC,uBAAY,WACzC,IAAMrH,EAAMyC,EAAM6E,SAASpD,SAG3B,OAFkBlE,EAAIuH,UAAU,EAAGvH,EAAIkF,OAAS,KAG/C,CAACzC,EAAM6E,SAASpD,WAGbsD,EAAqBH,uBAAY,WACrC,IAAM9F,EAAW6F,IACjBtE,EAAQ7B,KAAKwG,UAAUlG,GAAUP,MAAK,SAACC,GACjCA,EAEkB,KAAhBA,EAAK6C,QACPrB,EAAMsB,QAAQC,KAAK,UACVhB,EAAS3B,KAAOJ,EAAKwF,QAC9BS,EAAUjG,GACVkG,EAAelG,EAAKkD,OACpB4B,EAAqB9E,EAAKuF,aAC1BP,EAAiBhF,EAAK+E,eACtBG,EAAmBlF,EAAKiF,kBAExBzD,EAAMsB,QAAQC,KAAK,cAGrBvB,EAAMsB,QAAQC,KAAK,kBAGtB,CAAClB,EAAQ7B,KAAM+B,EAAS3B,GAAIoB,EAAMsB,QAASqD,IAE9CzD,qBAAU,WACR6D,MACC,CAACA,IAEJ,IAIMpB,EAAS,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChB/D,EAAQ8D,EAAEE,OAAOhE,MAEV,gBAAT+D,EACFa,EAAe5E,GACG,sBAAT+D,EACTP,EAAqBxD,GACH,kBAAT+D,EACTL,EAAiB1D,GACC,oBAAT+D,GACTH,EAAmB5D,IAoCvB,OACE,mCACE,sBAAKU,UAAU,OAAf,UACE,+CACA,cAAC,EAAD,CACE0B,OAxDO,WACblC,EAAMsB,QAAQC,KAAd,mBAA+B1C,EAAOD,MAwDhCD,OAAQA,EACRwD,OAvCmB,WACzB,IAAQrE,EAAqByC,EAArBzC,aAAcc,EAAO2B,EAAP3B,GACdb,EAAasC,EAAbtC,SAIFkH,EAAgB,CACpBrG,GAJeC,EAAOD,GAKtB8C,MAAOyB,EACPY,YAAaV,EACbE,gBACAE,kBACAO,OAAQpF,GAIVyB,EAAQ7B,KACL0G,aAAaD,EAAenH,EAAcC,GAC1CQ,MAAK,SAACI,GACDA,EAAO8D,OACTS,EAAUvE,IAEVuF,QAAQC,IAAR,UAAec,EAAcvD,MAA7B,oCACA1B,EAAMsB,QAAQC,KAAd,mBAA+B1C,EAAOD,SAGzCwF,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZrE,EAAMsB,QAAQC,KAAK,cAYjBa,iBAAiB,gBACjBC,SAAU,kBACR,mCACE,sBAAK7B,UAAU,aAAf,UACE,gCACE,uBAAO8D,QAAQ,cAAf,0BACA,uBACE1F,GAAG,cACHiF,KAAK,cACLd,KAAK,OACLjD,MAAOqD,EACPoB,SAAUZ,IAGZ,4BACG9E,EAAM,UACAA,EAAOsG,KAAKzE,UADZ,YACyB7B,EAAOsG,KAAKxE,UACxC,eAGN,uBAAO2D,QAAQ,oBAAf,gCACA,0BACE1F,GAAG,oBACHiF,KAAK,oBACL/D,MAAOuD,EACPkB,SAAUZ,OAGd,gCACE,uBAAOW,QAAQ,gBAAf,4BACA,uBACE1F,GAAG,gBACHiF,KAAK,gBACLd,KAAK,OACLjD,MAAOyD,GAAgC,GACvCgB,SAAUZ,IAGZ,uBAAOW,QAAQ,kBAAf,8BACA,0BACE1F,GAAG,kBACHiF,KAAK,kBACL/D,MAAO2D,GAAoC,GAC3Cc,SAAUZ,qB,iBCtCfyB,EA7GM,SAACpF,GACpB,MAA0Ba,mBAAS,MAAnC,mBAAO6B,EAAP,KAAc2C,EAAd,KACA,EAAgCxE,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAOhC,EAAP,KAAe4F,EAAf,KAEQpE,EAAYL,EAAZK,QACFE,EAAWF,EAAQjB,kBAGnBkG,EAAmCV,uBAAY,WAInD,OAHY5E,EAAMsB,QAAQuD,SAASpD,SACb8D,MAAM,IAAIC,OAAO,GAAGC,KAAK,MAG9C,CAACzF,EAAMsB,QAAQuD,SAASpD,WAE3BP,qBAAU,WAER,IAAMwE,EAA0BJ,IAChCjF,EAAQ7B,KAAKwG,UAAUU,GAAyBnH,MAAK,SAAC6C,GAChDA,EAEoB,KAAlBA,EAAOC,QACTrB,EAAMsB,QAAQC,KAAK,WAEnBR,GAAY,GACZ0D,EAAUrD,IAGZpB,EAAMsB,QAAQC,KAAK,kBAGtB,CAAC+D,EAAkCtF,EAAMsB,QAASjB,EAAQ7B,OAiB7D,OAAIkE,EACK,0CAAaA,EAAMrB,WAChBP,EAIR,qCACE,qBAAKN,UAAU,eAAf,SACE,sBAAKA,UAAU,OAAf,UAEGD,GAAYA,EAAS3B,KAAOC,EAAOmF,OAClC,qCACE,cAAC,IAAD,CAAMxD,UAAU,SAASC,GAAE,mBAAc5B,EAAOD,GAArB,WAA3B,2BAGA,cAAC,IAAD,CAAM4B,UAAU,SAASwC,QA7BlB,WACnB,IAAQ3C,EAAYL,EAAZK,QAERA,EAAQ7B,KACLmH,aAAa9G,EAAOD,GAAI2B,EAASzC,aAAcuC,EAAQtC,UACvDQ,MAAK,SAACI,GACDA,EAAO8D,OACT4C,EAAS1G,GAETuF,QAAQC,IAAR,UAAetF,EAAO6C,MAAtB,+BAoBsDjB,GAAG,IAAnD,8BAKF,GAEF,cAAC,IAAD,CAAMD,UAAU,0BAA0BC,GAAG,IAA7C,iCAMJ,sBAAKD,UAAU,OAAf,UACE,+CACA,+BACE,sBAAKA,UAAU,aAAf,UACE,gCACE,oBAAIA,UAAU,wBAAd,oBACA,oBAAIA,UAAU,eAAd,SAA8B3B,EAAO6C,QACrC,4BACG7C,EAAOsG,KAAP,aACStG,EAAOsG,KAAKzE,UADrB,YACkC7B,EAAOsG,KAAKxE,UAC3C,KAGN,cAAC,IAAD,UAAgB9B,EAAOkF,iBAEzB,gCACE,oBAAIvD,UAAU,wBAAd,4BACA,4BAAI3B,EAAO0E,gBAEX,oBAAI/C,UAAU,wBAAd,8BAEA,oBAAIA,UAAU,uBAAd,SACE,cAAC,IAAD,UAAgB3B,EAAO4E,kCA/C9B,8CCgCImC,EApFI,SAAC5F,GAClB,MAAwCa,mBAAS,IAAjD,mBAAO/C,EAAP,KAAqB+H,EAArB,KACA,EAAgChF,mBAAS,IAAzC,mBAAO9C,EAAP,KAAiB+H,EAAjB,KACA,EAA4BjF,mBAAS,IAArC,mBAAOlC,EAAP,KAAeuE,EAAf,KAEMS,EAAS,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChB/D,EAAQ8D,EAAEE,OAAOhE,MAEV,iBAAT+D,EACFgC,EAAgB/F,GACE,aAAT+D,GACTiC,EAAYhG,IA+BhB,OACE,mCACE,sBAAKU,UAAU,iBAAf,UACE,yCAEA,cAAC,EAAD,CACE0B,OAVO,WACblC,EAAMsB,QAAQC,KAAK,MAUb5C,OAAQA,EACRwD,OAnCO,WACb,IAAQ9B,EAAYL,EAAZK,QACA0F,GAAS/F,EAAM6E,SAAS1F,OAAS,CACvC4G,KAAM,CAAEtE,SAAU,OADZsE,KAKR1F,EAAQN,QACLR,OAAOzB,EAAcC,GACrBQ,MAAK,SAACG,GACQ,OAATA,EACFwE,EAAU,CAAC,8BAEXlD,EAAMsB,QAAQC,KAAKwE,GACnB7B,QAAQC,IAAR,mBAAwBrG,EAAxB,2BAGHsG,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZrE,EAAMsB,QAAQC,KAAK,cAiBjBa,iBAAiB,UACjBC,SAAU,kBACR,qCACE,uBAAOiC,QAAQ,eAAf,2BACA,uBACE1F,GAAG,eACHiF,KAAK,eACLd,KAAK,QACLjD,MAAOhC,EACPyG,SAAUZ,IAEZ,uBAAOW,QAAQ,WAAf,sBACA,uBACE1F,GAAG,WACHiF,KAAK,WACLd,KAAK,WACLjD,MAAO/B,EACPwG,SAAUZ,UAMlB,yEAC2C,IACzC,cAAC,IAAD,CAAMlD,GAAG,UAAT,qBAFF,aCnEOuF,EARK,SAAC,GAAiB,IAAf3F,EAAc,EAAdA,QAKrB,OAJAa,qBAAU,WACRb,EAAQN,QAAQH,aAGX,cAAC,IAAD,CAAUa,GAAG,OC6HPwF,EAlII,SAACjG,GAClB,IAAQK,EAAYL,EAAZK,QACR,EAAkCQ,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBwF,EAAlB,KACA,EAAgCrF,mBAAS,IAAzC,mBAAOF,EAAP,KAAiBwF,EAAjB,KACA,EAAwCtF,mBAAS,IAAjD,mBAAO/C,EAAP,KAAqB+H,EAArB,KACA,EAAgChF,mBAAS,IAAzC,mBAAO9C,EAAP,KAAiB+H,EAAjB,KACA,EAAiDjF,mBAAS,IAA1D,mBAAOuF,EAAP,KAA0BC,EAA1B,KACA,EAA4BxF,mBAAS,IAArC,mBAAOlC,EAAP,KAAeuE,EAAf,KAEMS,EAAS,SAACC,GACd,IAAMC,EAAOD,EAAEE,OAAOD,KAChB/D,EAAQ8D,EAAEE,OAAOhE,MAEV,cAAT+D,EACFqC,EAAapG,GACK,aAAT+D,EACTsC,EAAYrG,GACM,iBAAT+D,EACTgC,EAAgB/F,GACE,aAAT+D,EACTiC,EAAYhG,GACM,sBAAT+D,GACTwC,EAAoBvG,IAiClBwG,EAAa,WACjBjG,EAAQN,QAAQR,OAAOzB,EAAcC,GAAUQ,MAAK,WAClDyB,EAAMsB,QAAQC,KAAK,KACnB2C,QAAQC,IAAR,mBAAwBrG,EAAxB,2BAQJ,OACE,mCACE,sBAAK0C,UAAU,iBAAf,UACE,yCAEA,cAAC,EAAD,CACE0B,OAVO,WACblC,EAAMsB,QAAQC,KAAK,MAUb5C,OAAQA,EACRwD,OAhDO,WAEb,IAAMzD,EAAO,CACXgC,YACAC,WACA7C,eACAsI,oBACArI,YAIFsC,EAAQ7B,KACL+H,WAAW7H,GACXH,MAAK,SAACI,GACDA,EAAO8D,OACTS,EAAUvE,IAEVuF,QAAQC,IAAR,UACKrG,EADL,iDAGAwI,QAGHlC,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZrE,EAAMsB,QAAQC,KAAK,cAwBjBa,iBAAiB,UACjBC,SAAU,kBACR,qCACE,uBAAOiC,QAAQ,YAAf,wBACA,uBACE1F,GAAG,YACHiF,KAAK,YACLd,KAAK,OACLwB,SAAUZ,EACV7D,MAAOY,IAET,uBAAO4D,QAAQ,WAAf,uBACA,uBACE1F,GAAG,WACHiF,KAAK,WACLd,KAAK,OACLwB,SAAUZ,EACV7D,MAAOa,IAET,uBAAO2D,QAAQ,eAAf,2BACA,uBACE1F,GAAG,eACHiF,KAAK,eACLd,KAAK,QACLwB,SAAUZ,EACV7D,MAAOhC,IAET,uBAAOwG,QAAQ,WAAf,sBACA,uBACE1F,GAAG,WACHiF,KAAK,WACLd,KAAK,WACLwB,SAAUZ,EACV7D,MAAO/B,IAET,uBAAOuG,QAAQ,oBAAf,8BACA,uBACE1F,GAAG,oBACHiF,KAAK,oBACLd,KAAK,WACLwB,SAAUZ,EACV7D,MAAOsG,UAKf,2EAC6C,IAC3C,cAAC,IAAD,CAAM3F,GAAG,UAAT,qBAFF,aChHO+F,EAVE,WACf,OACE,sBAAKhG,UAAU,OAAf,UACE,2CACA,qFACA,cAAC,IAAD,CAAUC,GAAG,kBCGJgG,EATG,WAChB,OACE,sBAAKjG,UAAU,OAAf,UACE,2CACA,uECKSkG,EATQ,WACrB,OACE,sBAAKlG,UAAU,OAAf,UACE,uCACA,oF,QCsBSmG,EAxBM,SAAC,GAAuC,IAA1BzG,EAAyB,EAApC0G,UAAyBC,EAAW,6BAC1D,OACE,cAAC1G,EAAD,UACG,SAACE,GAAD,OACC,cAAC,IAAD,2BACMwG,GADN,IAEEC,OAAQ,SAAC9G,GAAD,OACNK,EAAQjB,kBACN,cAACc,EAAD,eAAeF,IAEf,cAAC,IAAD,CACES,GAAI,CACFgB,SAAU,UACVtC,MAAO,CAAE4G,KAAM/F,EAAM6E,qBCEjCkC,EAAqB3G,EAAYQ,GACjCoG,EAAoB5G,EAAYE,GAChC2G,EAA0B7G,EAAYgF,GACtC8B,EAAwB9G,EAAY6F,GACpCkB,EAAwB/G,EAAYwF,GACpCwB,EAAyBhH,EAAY4F,GACrCqB,EAA0BjH,EAAY6C,GACtCqE,EAA0BlH,EAAYoE,GAgC7B+C,MA9Bf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAACP,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACtK,KAAK,IAAI0J,UAAWG,IACjC,cAAC,EAAD,CACE7J,KAAK,kBACL0J,UAAWS,IAEb,cAAC,EAAD,CACEnK,KAAK,sBACL0J,UAAWU,IAEb,cAAC,IAAD,CAAOpK,KAAK,eAAe0J,UAAWK,IACtC,cAAC,IAAD,CAAO/J,KAAK,UAAU0J,UAAWO,IACjC,cAAC,IAAD,CAAOjK,KAAK,UAAU0J,UAAWM,IACjC,cAAC,IAAD,CAAOhK,KAAK,WAAW0J,UAAWQ,IAClC,cAAC,IAAD,CAAOlK,KAAK,YAAY0J,UAAWJ,IACnC,cAAC,IAAD,CAAOtJ,KAAK,aAAa0J,UAAWH,IACpC,cAAC,IAAD,CAAOvJ,KAAK,SAAS0J,UAAWF,IAChC,cAAC,IAAD,CAAOE,UAAWJ,aCvCbiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpJ,MAAK,YAAkD,IAA/CqJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASnB,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFoB,SAASC,eAAe,SAM1BV,K","file":"static/js/main.9ececa3c.chunk.js","sourcesContent":["const config = {\n  apiBaseUrl: \"http://localhost:5000/api\",\n};\n\nexport default config;\n","import config from \"./config\";\n\nexport default class Data {\n  api(\n    path,\n    method = \"GET\",\n    body = null,\n    requiresAuth = false,\n    credentials = null\n  ) {\n    const url = config.apiBaseUrl + path;\n\n    const options = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = btoa(\n        `${credentials.emailAddress}:${credentials.password}`\n      );\n\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n\n  // Get user from DB based on provided credentials\n  async getUser(emailAddress, password) {\n    const response = await this.api(\"/users\", \"GET\", null, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  // Create new user based on data provided\n  async createUser(user) {\n    const response = await this.api(\"/users\", \"POST\", user);\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  // Get full list of courses from the database\n  async getCourses() {\n    const response = await this.api(\"/courses\", \"GET\");\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 500) {\n      return response.json().then((data) => {\n        return data;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  // Get single course based on provided ID\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, \"GET\");\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 500) {\n      return response.json().then((data) => {\n        return data;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  // Create new course based on info provided\n  async createCourse(course, emailAddress, password) {\n    const response = await this.api(\"/courses\", \"POST\", course, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  // update course with new info provided by the user\n  async updateCourse(course, emailAddress, password) {\n    const response = await this.api(\n      `/courses/${course.id}`,\n      \"PUT\",\n      course,\n      true,\n      {\n        emailAddress,\n        password,\n      }\n    );\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  //Delete course\n  async deleteCourse(courseId, emailAddress, password) {\n    const response = await this.api(\n      `/courses/${courseId}`,\n      \"DELETE\",\n      null,\n      true,\n      {\n        emailAddress,\n        password,\n      }\n    );\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 403) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Data from \"./Data\";\nimport Cookies from \"js-cookie\";\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  state = {\n    authenticatedUser: Cookies.getJSON(\"authenticatedUser\") || null,\n    password: Cookies.getJSON(\"password\") || null,\n    course: \"\",\n  };\n\n  render() {\n    const { authenticatedUser, password } = this.state;\n\n    const value = {\n      password,\n      authenticatedUser,\n      data: this.data,\n      actions: {\n        signIn: this.signIn,\n        signOut: this.signOut,\n      },\n    };\n    return (\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\n    );\n  }\n\n  signIn = async (emailAddress, password) => {\n    const user = await this.data.getUser(emailAddress, password);\n    if (user !== null) {\n      this.setState({\n        authenticatedUser: user,\n        password: password,\n      });\n\n      Cookies.set(\"authenticatedUser\", JSON.stringify(user), { expires: 1 });\n      Cookies.set(\"password\", password, { expires: 1 });\n    }\n    return user;\n  };\n\n  signOut = async () => {\n    this.setState({ authenticatedUser: null, password: null });\n    Cookies.remove(\"authenticatedUser\", \"password\");\n  };\n}\n\nexport const Consumer = Context.Consumer;\n\nexport default function withContext(Component) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {(context) => <Component {...props} context={context} />}\n      </Context.Consumer>\n    );\n  };\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { context } = props;\n  const authUser = context.authenticatedUser;\n\n  return (\n    <header>\n      <div className=\"wrap header--flex\">\n        <h1 className=\"header--logo\">\n          <Link to=\"/\">Courses</Link>\n        </h1>\n        <nav>\n          {authUser ? (\n            <>\n              <span>\n                Welcome, {authUser.firstName} {authUser.lastName + \" \"}\n              </span>\n              <Link to=\"/signout\">Sign Out</Link>\n            </>\n          ) : (\n            <>\n              <ul className=\"header--signedout\">\n                <li>\n                  <Link to=\"/signup\">Sign Up</Link>\n                </li>\n                <li>\n                  <Link to=\"/signin\">Sign In</Link>\n                </li>\n              </ul>\n            </>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Courses = (props) => {\n  const { context } = props;\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [courses, setCourses] = useState([]);\n\n  useEffect(() => {\n    // Get current list of courses from the DB\n    context.data.getCourses().then((result) => {\n      // eslint-disable-next-line eqeqeq\n      if (result.message == 500) {\n        props.history.push(\"/error\");\n      } else {\n        setIsLoaded(true);\n        setCourses(result);\n      }\n    });\n  }, [context.data, props.history]);\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <div className=\"wrap main--grid\">\n          {courses\n            ? courses.map((course) => (\n                <Link\n                  className=\"course--module course--link\"\n                  to={{\n                    pathname: `/courses/${course.id}`,\n                    state: { courseId: `${course.id}` },\n                  }}\n                  key={course.id}\n                >\n                  <h2 className=\"course--label\">Course</h2>\n                  <h3 className=\"course--title\">{course.title}</h3>\n                </Link>\n              ))\n            : \" \"}\n\n          <Link\n            className=\"course--module course--add--module\"\n            to=\"/courses/create\"\n          >\n            <span className=\"course--add--title\">\n              <svg\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 13 13\"\n                className=\"add\"\n              >\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n              </svg>\n              New Course\n            </span>\n          </Link>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default Courses;\n","import React from \"react\";\n\nconst Form = (props) => {\n  const { cancel, errors, submit, submitButtonText, elements } = props;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    submit();\n  }\n\n  function handleCancel(event) {\n    event.preventDefault();\n    cancel();\n  }\n\n  function ErrorsDisplay({ erros }) {\n    let errorsDisplay = null;\n\n    if (errors.length) {\n      errorsDisplay = (\n        <div className=\"validation--errors\">\n          <h3>Validation Errors</h3>\n          <div>\n            <ul>\n              {errors.map((error, i) => (\n                <li key={i}>{error}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n    return errorsDisplay;\n  }\n\n  return (\n    <div>\n      <ErrorsDisplay errors={errors} />\n      <form onSubmit={handleSubmit}>\n        {elements()}\n        <div className=\"pad-bottom\">\n          <button className=\"button\" type=\"submit\">\n            {submitButtonText}\n          </button>\n          <button className=\"button button-secondary\" onClick={handleCancel}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\n\nconst CreateCourse = (props) => {\n  const [errors, setErrors] = useState([]);\n  const [courseTitle, setcourseTitle] = useState(\"\");\n  const [courseDescription, setCourseDescription] = useState(\"\");\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  const [materialsNeeded, setMaterialsNeeded] = useState(\"\");\n\n  const cancel = () => {\n    props.history.push(\"/\");\n  };\n\n  const submitCreateCourse = () => {\n    const { context } = props;\n    const authUser = context.authenticatedUser;\n    const { emailAddress, id } = authUser;\n    const { password } = context;\n\n    // Course object with new course data\n    const course = {\n      title: courseTitle,\n      description: courseDescription,\n      estimatedTime,\n      materialsNeeded,\n      userId: id,\n    };\n\n    // Create course in db\n    context.data\n      .createCourse(course, emailAddress, password)\n      .then((errors) => {\n        if (errors.length) {\n          setErrors(errors);\n        } else {\n          console.log(`${course.title} has successfully been created!`);\n          props.history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.history.push(\"/error\");\n      });\n  };\n\n  const change = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === \"courseTitle\") {\n      setcourseTitle(value);\n    } else if (name === \"courseDescription\") {\n      setCourseDescription(value);\n    } else if (name === \"estimatedTime\") {\n      setEstimatedTime(value);\n    } else if (name === \"materialsNeeded\") {\n      setMaterialsNeeded(value);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"wrap\">\n        <h2>Create Course</h2>\n        <Form\n          cancel={cancel}\n          errors={errors}\n          submit={submitCreateCourse}\n          submitButtonText=\"Create Course\"\n          elements={() => (\n            <>\n              <div className=\"main--flex\">\n                <div>\n                  <label htmlFor=\"courseTitle\">Course Title</label>\n                  <input\n                    id=\"courseTitle\"\n                    name=\"courseTitle\"\n                    type=\"text\"\n                    value={courseTitle}\n                    onChange={change}\n                  />\n\n                  <p>By Joe Smith</p>\n\n                  <label htmlFor=\"courseDescription\">Course Description</label>\n                  <textarea\n                    id=\"courseDescription\"\n                    name=\"courseDescription\"\n                    value={courseDescription}\n                    onChange={change}\n                  ></textarea>\n                </div>\n                <div>\n                  <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                  <input\n                    id=\"estimatedTime\"\n                    name=\"estimatedTime\"\n                    type=\"text\"\n                    value={estimatedTime}\n                    onChange={change}\n                  />\n\n                  <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                  <textarea\n                    id=\"materialsNeeded\"\n                    name=\"materialsNeeded\"\n                    value={materialsNeeded}\n                    onChange={change}\n                  ></textarea>\n                </div>\n              </div>\n            </>\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CreateCourse;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Form from \"./Form\";\n\nconst UpdateCourse = (props) => {\n  const { context } = props;\n  const authUser = context.authenticatedUser;\n\n  const [course, setCourse] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [courseTitle, setCourseTitle] = useState(\"\");\n  const [courseDescription, setCourseDescription] = useState(\"\");\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  const [materialsNeeded, setMaterialsNeeded] = useState(\"\");\n\n  // Get course ID from the url\n  const getCourseIdFromBrowser = useCallback(() => {\n    const url = props.location.pathname;\n    const idFromUrl = url.substring(9, url.length - 7);\n    const result = idFromUrl;\n    return result;\n  }, [props.location.pathname]);\n\n  // Get the course info that is associated with the ID that was pulled form the browser\n  const getRequestedCourse = useCallback(() => {\n    const courseId = getCourseIdFromBrowser();\n    context.data.getCourse(courseId).then((data) => {\n      if (data) {\n        // eslint-disable-next-line eqeqeq\n        if (data.message == 500) {\n          props.history.push(\"/error\");\n        } else if (authUser.id === data.userId) {\n          setCourse(data);\n          setCourseTitle(data.title);\n          setCourseDescription(data.description);\n          setEstimatedTime(data.estimatedTime);\n          setMaterialsNeeded(data.materialsNeeded);\n        } else {\n          props.history.push(\"/forbidden\");\n        }\n      } else {\n        props.history.push(\"/notfound\");\n      }\n    });\n  }, [context.data, authUser.id, props.history, getCourseIdFromBrowser]);\n\n  useEffect(() => {\n    getRequestedCourse();\n  }, [getRequestedCourse]);\n\n  const cancel = () => {\n    props.history.push(`/courses/${course.id}`);\n  };\n\n  const change = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === \"courseTitle\") {\n      setCourseTitle(value);\n    } else if (name === \"courseDescription\") {\n      setCourseDescription(value);\n    } else if (name === \"estimatedTime\") {\n      setEstimatedTime(value);\n    } else if (name === \"materialsNeeded\") {\n      setMaterialsNeeded(value);\n    }\n  };\n\n  const submitUpdateCourse = () => {\n    const { emailAddress, id } = authUser;\n    const { password } = context;\n    const courseId = course.id;\n\n    // courseUpdated object to provide the updated information to the PUT request\n    const courseUpdated = {\n      id: courseId,\n      title: courseTitle,\n      description: courseDescription,\n      estimatedTime,\n      materialsNeeded,\n      userId: id,\n    };\n\n    //Updated course based on new information provided in the courseUpdated object\n    context.data\n      .updateCourse(courseUpdated, emailAddress, password)\n      .then((errors) => {\n        if (errors.length) {\n          setErrors(errors);\n        } else {\n          console.log(`${courseUpdated.title} has been updated successfully!`);\n          props.history.push(`/courses/${course.id}`);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.history.push(\"/error\");\n      });\n  };\n\n  return (\n    <>\n      <div className=\"wrap\">\n        <h2>Update Course</h2>\n        <Form\n          cancel={cancel}\n          errors={errors}\n          submit={submitUpdateCourse}\n          submitButtonText=\"Update Course\"\n          elements={() => (\n            <>\n              <div className=\"main--flex\">\n                <div>\n                  <label htmlFor=\"courseTitle\">Course Title</label>\n                  <input\n                    id=\"courseTitle\"\n                    name=\"courseTitle\"\n                    type=\"text\"\n                    value={courseTitle}\n                    onChange={change}\n                  />\n\n                  <p>\n                    {course\n                      ? `${course.User.firstName} ${course.User.lastName}`\n                      : \"Loading...\"}\n                  </p>\n\n                  <label htmlFor=\"courseDescription\">Course Description</label>\n                  <textarea\n                    id=\"courseDescription\"\n                    name=\"courseDescription\"\n                    value={courseDescription}\n                    onChange={change}\n                  ></textarea>\n                </div>\n                <div>\n                  <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                  <input\n                    id=\"estimatedTime\"\n                    name=\"estimatedTime\"\n                    type=\"text\"\n                    value={estimatedTime ? estimatedTime : \"\"}\n                    onChange={change}\n                  />\n\n                  <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                  <textarea\n                    id=\"materialsNeeded\"\n                    name=\"materialsNeeded\"\n                    value={materialsNeeded ? materialsNeeded : \"\"}\n                    onChange={change}\n                  ></textarea>\n                </div>\n              </div>\n            </>\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default UpdateCourse;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link } from \"react-router-dom\";\n\nconst CourseDetail = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [course, setCourse] = useState([]);\n\n  const { context } = props;\n  const authUser = context.authenticatedUser;\n\n  // Pull course id from url\n  const getCourseIdFromBrowserAddressBar = useCallback(() => {\n    const url = props.history.location.pathname;\n    const idFromUrl = url.split(\"\").splice(9).join(\"\");\n    const result = idFromUrl;\n    return result;\n  }, [props.history.location.pathname]);\n\n  useEffect(() => {\n    // Get requested course from db based on provided id\n    const idFromBrowserAddressBar = getCourseIdFromBrowserAddressBar();\n    context.data.getCourse(idFromBrowserAddressBar).then((result) => {\n      if (result) {\n        // eslint-disable-next-line eqeqeq\n        if (result.message == 500) {\n          props.history.push(\"/error\");\n        } else {\n          setIsLoaded(true);\n          setCourse(result);\n        }\n      } else {\n        props.history.push(\"/notfound\");\n      }\n    });\n  }, [getCourseIdFromBrowserAddressBar, props.history, context.data]);\n\n  // Delete course\n  const deleteCourse = () => {\n    const { context } = props;\n\n    context.data\n      .deleteCourse(course.id, authUser.emailAddress, context.password)\n      .then((errors) => {\n        if (errors.length) {\n          setError(errors);\n        } else {\n          console.log(`${course.title} successfully deleted!`);\n        }\n      });\n  };\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <div className=\"actions--bar\">\n          <div className=\"wrap\">\n            {/* If current logged in user is the owner of the course being viewd display the UPDATED COURSE and DELETE COURSE button */}\n            {authUser && authUser.id === course.userId ? (\n              <>\n                <Link className=\"button\" to={`/courses/${course.id}/update`}>\n                  Update Course\n                </Link>\n                <Link className=\"button\" onClick={deleteCourse} to=\"/\">\n                  Delete Course\n                </Link>\n              </>\n            ) : (\n              \"\"\n            )}\n            <Link className=\"button button-secondary\" to=\"/\">\n              Return to List\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"wrap\">\n          <h2>Course Detail</h2>\n          <form>\n            <div className=\"main--flex\">\n              <div>\n                <h3 className=\"course--detail--title\">Course</h3>\n                <h4 className=\"course--name\">{course.title}</h4>\n                <p>\n                  {course.User\n                    ? `By ${course.User.firstName} ${course.User.lastName}`\n                    : \"\"}\n                </p>\n\n                <ReactMarkdown>{course.description}</ReactMarkdown>\n              </div>\n              <div>\n                <h3 className=\"course--detail--title\">Estimated Time</h3>\n                <p>{course.estimatedTime}</p>\n\n                <h3 className=\"course--detail--title\">Materials Needed</h3>\n\n                <ul className=\"course--detail--list\">\n                  <ReactMarkdown>{course.materialsNeeded}</ReactMarkdown>\n                </ul>\n              </div>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n  }\n};\nexport default CourseDetail;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"./Form\";\n\nconst UserSignIn = (props) => {\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const change = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === \"emailAddress\") {\n      setEmailAddress(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const submit = () => {\n    const { context } = props;\n    const { from } = props.location.state || {\n      from: { pathname: \"/\" },\n    };\n\n    //Sign in user based on provided credentials\n    context.actions\n      .signIn(emailAddress, password)\n      .then((user) => {\n        if (user === null) {\n          setErrors([\"Sign-in was unsucessfull\"]);\n        } else {\n          props.history.push(from);\n          console.log(`SUCCESS! ${emailAddress} is now signed in!`);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.history.push(\"/error\");\n      });\n  };\n\n  const cancel = () => {\n    props.history.push(\"/\");\n  };\n\n  return (\n    <>\n      <div className=\"form--centered\">\n        <h2>Sign In</h2>\n\n        <Form\n          cancel={cancel}\n          errors={errors}\n          submit={submit}\n          submitButtonText=\"Sign In\"\n          elements={() => (\n            <>\n              <label htmlFor=\"emailAddress\">Email Address</label>\n              <input\n                id=\"emailAddress\"\n                name=\"emailAddress\"\n                type=\"email\"\n                value={emailAddress}\n                onChange={change}\n              />\n              <label htmlFor=\"password\">Password</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={change}\n              />\n            </>\n          )}\n        />\n\n        <p>\n          Don't have a user account? Click here to{\" \"}\n          <Link to=\"/signup\">sign up</Link>!\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default UserSignIn;\n","import { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\n\n//Redirect back to the root directory\nconst UserSignOut = ({ context }) => {\n  useEffect(() => {\n    context.actions.signOut();\n  });\n\n  return <Redirect to=\"/\" />;\n};\n\nexport default UserSignOut;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"./Form.js\";\n\nconst UserSignUp = (props) => {\n  const { context } = props;\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setCofirmedPassword] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const change = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === \"firstName\") {\n      setFirstName(value);\n    } else if (name === \"lastName\") {\n      setLastName(value);\n    } else if (name === \"emailAddress\") {\n      setEmailAddress(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    } else if (name === \"confirmedPassword\") {\n      setCofirmedPassword(value);\n    }\n  };\n\n  const submit = () => {\n    // user object to send to POST to the database\n    const user = {\n      firstName,\n      lastName,\n      emailAddress,\n      confirmedPassword,\n      password,\n    };\n\n    // create new user based on information provided in the user object\n    context.data\n      .createUser(user)\n      .then((errors) => {\n        if (errors.length) {\n          setErrors(errors);\n        } else {\n          console.log(\n            `${emailAddress} is successfully signed up and authenticated`\n          );\n          signInUser();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.history.push(\"/error\");\n      });\n  };\n\n  const signInUser = () => {\n    context.actions.signIn(emailAddress, password).then(() => {\n      props.history.push(\"/\");\n      console.log(`SUCCESS! ${emailAddress} is now signed in!`);\n    });\n  };\n\n  const cancel = () => {\n    props.history.push(\"/\");\n  };\n\n  return (\n    <>\n      <div className=\"form--centered\">\n        <h2>Sign Up</h2>\n\n        <Form\n          cancel={cancel}\n          errors={errors}\n          submit={submit}\n          submitButtonText=\"Sign Up\"\n          elements={() => (\n            <>\n              <label htmlFor=\"firstName\">First Name</label>\n              <input\n                id=\"firstName\"\n                name=\"firstName\"\n                type=\"text\"\n                onChange={change}\n                value={firstName}\n              />\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input\n                id=\"lastName\"\n                name=\"lastName\"\n                type=\"text\"\n                onChange={change}\n                value={lastName}\n              />\n              <label htmlFor=\"emailAddress\">Email Address</label>\n              <input\n                id=\"emailAddress\"\n                name=\"emailAddress\"\n                type=\"email\"\n                onChange={change}\n                value={emailAddress}\n              />\n              <label htmlFor=\"password\">Password</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                onChange={change}\n                value={password}\n              />\n              <label htmlFor=\"confirmedPassword\">Confirm Password</label>\n              <input\n                id=\"confirmedPassword\"\n                name=\"confirmedPassword\"\n                type=\"password\"\n                onChange={change}\n                value={confirmedPassword}\n              />\n            </>\n          )}\n        />\n        <p>\n          Already have a user account? Click here to{\" \"}\n          <Link to=\"/signin\">sign in</Link>!\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default UserSignUp;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"wrap\">\n      <h2>Not Found</h2>\n      <p>Sorry! We couldn't find the page you're looking for.</p>\n      <Redirect to=\"/notfound\" />\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Forbidden = () => {\n  return (\n    <div className=\"wrap\">\n      <h2>Forbidden</h2>\n      <p>Oh oh! You can't access this page.</p>\n    </div>\n  );\n};\n\nexport default Forbidden;\n","import React from \"react\";\n\nconst UnhandledError = () => {\n  return (\n    <div className=\"wrap\">\n      <h2>Error</h2>\n      <p>Sorry! We just encountered an unexpected error.</p>\n    </div>\n  );\n};\n\nexport default UnhandledError;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { Consumer } from \"../Context\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Consumer>\n      {(context) => (\n        <Route\n          {...rest}\n          render={(props) =>\n            context.authenticatedUser ? (\n              <Component {...props} />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/signin\",\n                  state: { from: props.location },\n                }}\n              />\n            )\n          }\n        />\n      )}\n    </Consumer>\n  );\n};\n\nexport default PrivateRoute;\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Courses from \"./components/Courses\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport UserSignUp from \"./components/UserSignUp\";\nimport NotFound from \"./components/NotFound\";\nimport Forbidden from \"./components/Forbidden\";\nimport UnhandledError from \"./components/UnhandledError\";\n\nimport withContext from \"./Context\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\n//Components consuming data from context\nconst CoursesWithContext = withContext(Courses);\nconst HeaderWithContext = withContext(Header);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <HeaderWithContext />\n\n        <Switch>\n          <Route exact path=\"/\" component={CoursesWithContext} />\n          <PrivateRoute\n            path=\"/courses/create\"\n            component={CreateCourseWithContext}\n          />\n          <PrivateRoute\n            path=\"/courses/:id/update\"\n            component={UpdateCourseWithContext}\n          />\n          <Route path=\"/courses/:id\" component={CourseDetailWithContext} />\n          <Route path=\"/signin\" component={UserSignInWithContext} />\n          <Route path=\"/signup\" component={UserSignUpWithContext} />\n          <Route path=\"/signout\" component={UserSignOutWithContext} />\n          <Route path=\"/notfound\" component={NotFound} />\n          <Route path=\"/forbidden\" component={Forbidden} />\n          <Route path=\"/error\" component={UnhandledError} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./styles/reset.css\";\nimport \"./styles/global.css\";\nimport { Provider } from \"./Context\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}